services:
  product-service:
    build:
      context: ./product-service
    container_name: product-service
    ports:
      - '3001:3001'
    environment:
      - PORT=3001
      - NODE_ENV=development
      - INTERNAL_API_KEY=miclaveultrasecreta
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=productsdb
    volumes:
      - ./product-service:/app
    command: npm run dev

  inventory-service:
    build:
      context: ./inventory-service
    container_name: inventory-service
    ports:
      - '3002:3002'
    depends_on:
      - product-service
    environment:
      - PORT=3002
      - NODE_ENV=development
      - INTERNAL_API_KEY=miclaveultrasecreta
      - PRODUCT_SERVICE_URL=http://product-service:3001/api
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=inventorydb
    volumes:
      - ./inventory-service:/app
    command: npm run dev

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - '5173:80'
    depends_on:
      - product-service
      - inventory-service

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  default:
    name: integration-network

volumes:
  postgres_data: